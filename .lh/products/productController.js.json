{
    "sourceFile": "products/productController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1688076893891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1688077116581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,46 @@\n-const faker = require('@faker-js/faker');\r\n-const { readJsonFile, writeJsonFile } = require('../helpers/dataUtils');\r\n+const faker = require(\"@faker-js/faker\");\r\n+const { readJsonFile, writeJsonFile } = require(\"../helpers/dataUtils\");\r\n const { nanoid } = require(\"nanoid\");\r\n-const productService = require('./productService');\r\n-const consoleUtils = require('../helpers/consoleUtils');\r\n+const productService = require(\"./productService\");\r\n+const consoleUtils = require(\"../helpers/consoleUtils\");\r\n \r\n const createProduct = () => {\r\n   const inStock = faker.dataType.boolean();\r\n-  const quantityAvailable = inStock ? faker.datatype.number({ min: 100, max: 10000 }) : null;\r\n+  const quantityAvailable = inStock\r\n+    ? faker.datatype.number({ min: 100, max: 10000 })\r\n+    : null;\r\n   const product = {\r\n     name: faker.commerce.product(),\r\n     priceInCents: faker.commerce.price(10, 1000, 0),\r\n     prodID: nanoid(5),\r\n     inStock: inStock,\r\n-    quantityAvailable: quantityAvailable\r\n+    quantityAvailable: quantityAvailable,\r\n   };\r\n \r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n \r\n   products.push(product);\r\n-  writeJsonFile('products.json', products);\r\n+  writeJsonFile(\"products.json\", products);\r\n \r\n-  console.log('New product created:');\r\n+  console.log(\"New product created:\");\r\n   console.log(product);\r\n \r\n   return product;\r\n };\r\n \r\n-\r\n const deleteProduct = (productName) => {\r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n   const updatedProducts = products.filter(\r\n     (product) => product.name.toLowerCase() !== productName.toLowerCase()\r\n   );\r\n-  writeJsonFile('products.json', updatedProducts);\r\n+  writeJsonFile(\"products.json\", updatedProducts);\r\n \r\n   console.log(`Product \"${productName}\" deleted.`);\r\n };\r\n \r\n const updateProduct = (productName) => {\r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n   const productToUpdateIndex = products.findIndex(\r\n     (product) => product.name.toLowerCase() === productName.toLowerCase()\r\n   );\r\n \r\n@@ -47,53 +48,54 @@\n     console.log(`Product \"${productName}\" not found.`);\r\n     return;\r\n   }\r\n \r\n-\r\n-  products[productToUpdateIndex].name = 'Updated Product Name';\r\n+  products[productToUpdateIndex].name = \"Updated Product Name\";\r\n   products[productToUpdateIndex].priceInCents = 9999;\r\n \r\n-  writeJsonFile('products.json', products);\r\n+  writeJsonFile(\"products.json\", products);\r\n \r\n   console.log(`Product \"${productName}\" updated.`);\r\n };\r\n \r\n const showProduct = (productName) => {\r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n   const product = products.find(\r\n     (p) => p.name.toLowerCase() === productName.toLowerCase()\r\n   );\r\n \r\n   if (product) {\r\n-    console.log('Product details:');\r\n+    console.log(\"Product details:\");\r\n     console.log(product);\r\n   } else {\r\n     console.log(`Product \"${productName}\" not found.`);\r\n   }\r\n };\r\n \r\n const showAllProducts = () => {\r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n   const simplifiedProducts = products.map((product) => ({\r\n     name: product.name,\r\n     id: product.id,\r\n     price: product.priceInCents,\r\n   }));\r\n \r\n-  console.log('All products:');\r\n+  console.log(\"All products:\");\r\n   console.log(simplifiedProducts);\r\n };\r\n \r\n const sortProductsByPrice = () => {\r\n-  const products = readJsonFile('products.json');\r\n-  const sortedProducts = products.sort((a, b) => a.priceInCents - b.priceInCents);\r\n+  const products = readJsonFile(\"products.json\");\r\n+  const sortedProducts = products.sort(\r\n+    (a, b) => a.priceInCents - b.priceInCents\r\n+  );\r\n \r\n-  console.log('Products sorted by price:');\r\n+  console.log(\"Products sorted by price:\");\r\n   console.log(sortedProducts);\r\n };\r\n \r\n const showProductsBelowPrice = (priceThreshold) => {\r\n-  const products = readJsonFile('products.json');\r\n+  const products = readJsonFile(\"products.json\");\r\n   const filteredProducts = products.filter(\r\n     (product) => product.priceInCents < priceThreshold\r\n   );\r\n \r\n@@ -103,30 +105,29 @@\n \r\n function showProductsInStock() {\r\n   const inStockProducts = productService.getProductsInStock();\r\n   if (inStockProducts.length > 0) {\r\n-    console.log('Products in stock:');\r\n+    console.log(\"Products in stock:\");\r\n     inStockProducts.forEach((product) => {\r\n       console.log(product);\r\n     });\r\n   } else {\r\n-    console.log('No products in stock.');\r\n+    console.log(\"No products in stock.\");\r\n   }\r\n }\r\n \r\n function showProductsOutOfStock() {\r\n   const outOfStockProducts = productService.getProductsOutOfStock();\r\n   if (outOfStockProducts.length > 0) {\r\n-    console.log('Products out of stock:');\r\n+    console.log(\"Products out of stock:\");\r\n     outOfStockProducts.forEach((product) => {\r\n       console.log(product);\r\n     });\r\n   } else {\r\n-    console.log('All products are in stock.');\r\n+    console.log(\"All products are in stock.\");\r\n   }\r\n }\r\n \r\n-\r\n module.exports = {\r\n   createProduct,\r\n   deleteProduct,\r\n   updateProduct,\r\n@@ -134,6 +135,6 @@\n   showAllProducts,\r\n   sortProductsByPrice,\r\n   showProductsBelowPrice,\r\n   showProductsInStock,\r\n-  showProductsOutOfStock\r\n+  showProductsOutOfStock,\r\n };\r\n"
                }
            ],
            "date": 1688076893891,
            "name": "Commit-0",
            "content": "const faker = require('@faker-js/faker');\r\nconst { readJsonFile, writeJsonFile } = require('../helpers/dataUtils');\r\nconst { nanoid } = require(\"nanoid\");\r\nconst productService = require('./productService');\r\nconst consoleUtils = require('../helpers/consoleUtils');\r\n\r\nconst createProduct = () => {\r\n  const inStock = faker.dataType.boolean();\r\n  const quantityAvailable = inStock ? faker.datatype.number({ min: 100, max: 10000 }) : null;\r\n  const product = {\r\n    name: faker.commerce.product(),\r\n    priceInCents: faker.commerce.price(10, 1000, 0),\r\n    prodID: nanoid(5),\r\n    inStock: inStock,\r\n    quantityAvailable: quantityAvailable\r\n  };\r\n\r\n  const products = readJsonFile('products.json');\r\n\r\n  products.push(product);\r\n  writeJsonFile('products.json', products);\r\n\r\n  console.log('New product created:');\r\n  console.log(product);\r\n\r\n  return product;\r\n};\r\n\r\n\r\nconst deleteProduct = (productName) => {\r\n  const products = readJsonFile('products.json');\r\n  const updatedProducts = products.filter(\r\n    (product) => product.name.toLowerCase() !== productName.toLowerCase()\r\n  );\r\n  writeJsonFile('products.json', updatedProducts);\r\n\r\n  console.log(`Product \"${productName}\" deleted.`);\r\n};\r\n\r\nconst updateProduct = (productName) => {\r\n  const products = readJsonFile('products.json');\r\n  const productToUpdateIndex = products.findIndex(\r\n    (product) => product.name.toLowerCase() === productName.toLowerCase()\r\n  );\r\n\r\n  if (productToUpdateIndex === -1) {\r\n    console.log(`Product \"${productName}\" not found.`);\r\n    return;\r\n  }\r\n\r\n\r\n  products[productToUpdateIndex].name = 'Updated Product Name';\r\n  products[productToUpdateIndex].priceInCents = 9999;\r\n\r\n  writeJsonFile('products.json', products);\r\n\r\n  console.log(`Product \"${productName}\" updated.`);\r\n};\r\n\r\nconst showProduct = (productName) => {\r\n  const products = readJsonFile('products.json');\r\n  const product = products.find(\r\n    (p) => p.name.toLowerCase() === productName.toLowerCase()\r\n  );\r\n\r\n  if (product) {\r\n    console.log('Product details:');\r\n    console.log(product);\r\n  } else {\r\n    console.log(`Product \"${productName}\" not found.`);\r\n  }\r\n};\r\n\r\nconst showAllProducts = () => {\r\n  const products = readJsonFile('products.json');\r\n  const simplifiedProducts = products.map((product) => ({\r\n    name: product.name,\r\n    id: product.id,\r\n    price: product.priceInCents,\r\n  }));\r\n\r\n  console.log('All products:');\r\n  console.log(simplifiedProducts);\r\n};\r\n\r\nconst sortProductsByPrice = () => {\r\n  const products = readJsonFile('products.json');\r\n  const sortedProducts = products.sort((a, b) => a.priceInCents - b.priceInCents);\r\n\r\n  console.log('Products sorted by price:');\r\n  console.log(sortedProducts);\r\n};\r\n\r\nconst showProductsBelowPrice = (priceThreshold) => {\r\n  const products = readJsonFile('products.json');\r\n  const filteredProducts = products.filter(\r\n    (product) => product.priceInCents < priceThreshold\r\n  );\r\n\r\n  console.log(`Products below ${priceThreshold}:`);\r\n  console.log(filteredProducts);\r\n};\r\n\r\nfunction showProductsInStock() {\r\n  const inStockProducts = productService.getProductsInStock();\r\n  if (inStockProducts.length > 0) {\r\n    console.log('Products in stock:');\r\n    inStockProducts.forEach((product) => {\r\n      console.log(product);\r\n    });\r\n  } else {\r\n    console.log('No products in stock.');\r\n  }\r\n}\r\n\r\nfunction showProductsOutOfStock() {\r\n  const outOfStockProducts = productService.getProductsOutOfStock();\r\n  if (outOfStockProducts.length > 0) {\r\n    console.log('Products out of stock:');\r\n    outOfStockProducts.forEach((product) => {\r\n      console.log(product);\r\n    });\r\n  } else {\r\n    console.log('All products are in stock.');\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  createProduct,\r\n  deleteProduct,\r\n  updateProduct,\r\n  showProduct,\r\n  showAllProducts,\r\n  sortProductsByPrice,\r\n  showProductsBelowPrice,\r\n  showProductsInStock,\r\n  showProductsOutOfStock\r\n};\r\n"
        }
    ]
}