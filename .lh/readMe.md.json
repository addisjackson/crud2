{
    "sourceFile": "readMe.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1688074610765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1688074610765,
            "name": "Commit-0",
            "content": "              <u># H1 My Application </u>****\n\nThe perfect market system is one that allows as many as want to enter it be able to and give access to these goods to anyone who wants to buy at whatever price they are willing to pay. It is this negatively proportional relationship between the supply at any price and demand at any price that eventually dictate the market price at which the product is generally sold. Natural competition and the market price then eliminates competitors whose manufacturing costs and too great to compete and other factors take care of whom will become the highest selling vendor of the product. One such factor is efficiency. It is this important idea often simplified with the phrase \"time is money\", that my app attempts to tackle and hopefully conquers.\n\n\nThe app works by multitasking various operations any business with physical products must do and do well. Inventory is one such operation as well as reviewing and comparing past sales  after changing conditions which may be deliberate as in quality testing and customer relations or unavoidable like inflation. Calculating the cost of present inventory is necessary not just for insurance estimates but of the company's worth and keeping track of sales give a great idea of probably profits.\n\nMy app has functions that aide in all these operations that companies must thrive at and does so efficiently. With a single button my app can:\n\n      \n-        create a product and add it to the registry with a unique id (*npm run create)*\n-        view the details of a single product that includes its price and quatitity (*npm run show \"name\")*\n-        return a list of names and ids for all products in the registry (*npm run index)*\n-        update a product whose properties may have been somehow altered (*npm run \"name\")*\n-        delete a product from the registry (*npm run delete \"name\")*\n-        sort the products by price (*npm run sort)*\n-        show only products below a certain price (*npm run below \"price\")*\n-        show only products in stock (*npm run inStock)* or\n-        show only products out of stick (*npm run outOfStock)*\n       \n              \nAs you sell it will access the buyers cart with its ability to:\n \n-        view all the items in a cart (*npm run view-cart)**\n-        add one of multiple products to the cart (*npm run add-to-cart \"name\" \"quantity\")*\n-        update products in the cart (*npm run update-cart \"name\")*\n-        delete an item from the cart (*npm run delete-from-cart \"name\")*\n-        delete the entire cart (*npm run delete-cart)*\n-        get the total cost of a cart (*npm run getCartTotal)*\n\nIndividually, each of these actions might seem unremarkable, however when accessed together in the same app, it affords the opportunity to multitask. The app does not only give information on the store registry but it can access the carts of shoppers as well. It instantly gives an idea of the stores worth for insurance purposes and with the two coupled, a proper estimate of the loss due to shoplifting can be assessed. \n\nThe dynamic nature of my app allows the influx of information requested almost instantaneously making it seem to react in \nrealtime. Additionally its speed and ability to multitask is a definite leg up in efficiency, which might be all a company needs to become the top seller in any industry.\n\n                   <u>#H3 Stretch Goals </u>\n In considering stretch goals I thought of the things I ususally take for granted when I shop but for those of us on a budget, are very necessary actions. These involve sorting the products by price to view what may be on sale or just a lower cost but similar substitute to buy . If I haver a specific  budget and do not have time to seach the store for the best deals I can simply show only those items that fit below my budget. I thought it also useful when in a rush to be able to see what items are in stock and conversely what items are out of stock. This way I can make a quick decision on what to buy and what to leave for another time. Lastly I thought it would be useful to be able to see the total cost of my cart before I get to the register so as to avoid the embarrassment if I cannot pay having made an error in calculating my costs."
        }
    ]
}